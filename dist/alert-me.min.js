/**
* Package: angular-alert-me - v1.0.5 
* Description: a light module to help you create and manager alerts in your applications 
* Last build: 2017-04-11 
* @author codekraft-studio 
* @license ISC 
*/

angular.module("alert-me",[]).run(function($log,$document,$templateCache,AlertMe){if($templateCache.put("alert-me/container-template.html",'<div class="notify-container {{posV}} {{posH}}"><ul class="notify-nav" ><alert-message ng-repeat="message in messages" message="message"></alert-message></ul></div>'),$templateCache.put("alert-me/message-template.html",'<li class="notify-message" ng-click="onClick($event)"><div class="notify-message-inner {{message.className}}" ng-class="{dismissable: message.dismissButton}"><div ng-if="message.icon" class="notify-icon"><img ng-src="{{message.icon}}" title="{{message.title}}" /></div><div ng-show="message.count > 1" class="count" ng-bind="message.count"></div><div class="notify-content"><span ng-if="message.title" class="notify-title" ng-bind="message.title"></span><span ng-if="message.isTrustedHtml" class="notify-message" ng-bind-html="message.content"></span><span ng-if="!message.isTrustedHtml" class="notify-message" ng-bind="message.content"></span></div><span ng-if="message.dismissButton" class="close" ng-click="closeAlert()">X</span></div></li>'),!AlertMe.defaults.desktop)return AlertMe.$$init();window.Notification&&void 0!==window.Notification||($log.warn("angular-alert-me: Notifications are not supported in your browser."),AlertMe.defaults.desktop=!1,AlertMe.$$init())}),angular.module("alert-me").directive("alertMe",function(AlertMe){function _link(scope){scope.messages=AlertMe.messages,scope.posH=AlertMe.defaults.horizontalPosition,scope.posV=AlertMe.defaults.verticalPosition}return{restrict:"E",scope:!0,templateUrl:"alert-me/container-template.html",link:_link}}).directive("alertMessage",function($timeout,$q,AlertMe){function link(scope,element){var promise;if(scope.closeAlert=function(){return AlertMe.dismiss(scope.message.id)},scope.onClick=function(e){if(e.preventDefault(),scope.message.dismissOnClick)return scope.closeAlert()},scope.message.resolve&&angular.isFunction(scope.message.resolve))return $q.when(scope.message.resolve(),scope.closeAlert);scope.message.dismissOnTimeout&&(promise=$timeout(function(){return scope.closeAlert()},1e3*scope.message.dismissTimeout),element.bind("mouseenter",function(){$timeout.cancel(promise)}),element.bind("mouseleave",function(){promise=$timeout(function(){return scope.closeAlert()},1e3*scope.message.dismissTimeout)})),scope.$watch("message.count",function(n,o){o!==n&&n>1&&scope.message.dismissOnTimeout&&($timeout.cancel(promise),promise=$timeout(function(){return scope.closeAlert()},1e3*scope.message.dismissTimeout))})}return{restrict:"E",replace:!0,scope:{message:"="},templateUrl:"alert-me/message-template.html",link:link}}),angular.module("alert-me").factory("AlertMe",function($log,$sce,$injector,$rootScope,$q,$document,Alert){function _mergeParams(object,defaults){return angular.isString(object)?defaults.content=object:angular.isObject(object)&&(defaults=angular.extend(object,defaults)),defaults}function _createDirective(){if(!$document.find("alert-me").length){var $compile=$injector.get("$compile"),directive=$document[0].createElement("alert-me");$document[0].body.appendChild(directive),$compile(directive)($rootScope.$new())}}function _dismiss(id){for(var i=0;i<_messages.length;i++)if(_messages[i].id===id){var message=angular.copy(_messages[i]);if(_messages.splice(i,1),angular.isFunction(message.onDismiss))return message.onDismiss(message)}}function _doDefaultNotification(message,callback){if(message.combineDuplications)for(var i=0;i<_messages.length;i++)if(_messages[i].content===message.content&&_messages[i].className===message.className)return _messages[i].count=_messages[i].count+1,callback(_messages[i]);return message.maxNum&&_messages.length>=message.maxNum&&"top"===message.verticalPosition?this.dismiss(_messages[0].id):message.maxNum&&_messages.length>=message.maxNum&&"bottom"===message.verticalPosition&&this.dismiss(_messages[_messages.length-1].id),message.content=message.isTrustedHtml?$sce.trustAsHtml(message.content):message.content,"bottom"===message.verticalPosition?_messages.unshift(message):_messages.push(message),message.dismiss=function(){return _dismiss(message.id)},message.onAfterCreate&&angular.isFunction(message.onAfterCreate)&&message.onAfterCreate(message.id,message),callback(message)}function _doDesktopNotification(message,callback){var notify=new Notification(message.title,{tag:message.id,body:message.content.replace(/(<([^>]+)>)/gi,""),image:message.image,icon:message.icon,sticky:!message.dismissButton&&!message.dismissOnTimeout,requireInteraction:!message.dismissOnTimeout});return message.dismiss=function(){return notify.close()},angular.isFunction(message.onAfterCreate)&&(notify.onshow=function(){return message.onAfterCreate()}),notify.onclose=function(){return _dismiss(message.id)},_messages.push(message),callback(message)}function _init(){var deferred=$q.defer();return _defaults.desktop?Notification.requestPermission().then(function(result){if(("denied"===result||"default"===result)&&($log.warn("angular-alert-me: The client rejected the desktop notification permission."),_defaults.desktop=!1,deferred.resolve("DEFAULT"),!$document.find("alert-me").length))return _createDirective();deferred.resolve("DESKTOP")}):deferred.resolve("DEFAULT"),deferred.promise}function _create(msg){var deferred=$q.defer();return msg="object"==typeof msg?msg:{content:msg},msg.id="ID:"+Date.now()+Math.floor(10*Math.random()+1),msg.count=1,msg=angular.extend({},_defaults,msg),angular.isFunction(msg.onBeforeCreate)&&!msg.onBeforeCreate(msg)?deferred.reject():_init().then(function(type){"DEFAULT"===type&&_doDefaultNotification(msg,function(response){deferred.resolve(response)}),"DESKTOP"===type&&_doDesktopNotification(msg,function(response){deferred.resolve(response)})},function(){$log.warn("angular-alert-me: Something went wrong during the creation of notification:",msg),deferred.reject()}),deferred.promise}function _dismissAll(){for(var i=_messages.length;i--;)_messages[i].dismiss()}function _info(msg){var object=_mergeParams(msg,{className:"info"});return this.create(object)}function _success(msg){var object=_mergeParams(msg,{className:"success"});return this.create(object)}function _warning(msg){var object=_mergeParams(msg,{className:"warning"});return this.create(object)}function _danger(msg){var object=_mergeParams(msg,{className:"danger"});return this.create(object)}var _messages=[],_defaults=Alert.defaults;return{$$init:_createDirective,defaults:_defaults,messages:_messages,create:_create,dismiss:_dismiss,dismissAll:_dismissAll,info:_info,success:_success,warning:_warning,danger:_danger}}),angular.module("alert-me").factory("alertInterceptor",function($q,AlertMe){return{requestError:function(rejection){if(rejection.config.notifyError)return AlertMe.warning({title:rejection.status,content:rejection.statusText}),$q.reject(rejection)},responseError:function(rejection){if(rejection.config.notifyError)return AlertMe.warning({title:rejection.status,content:rejection.statusText}),$q.reject(rejection)}}}),angular.module("alert-me").provider("Alert",function(){var _defaults={maxNum:0,verticalPosition:"top",horizontalPosition:"right",className:"default",isTrustedHtml:!1,combineDuplications:!0,dismissButton:!0,dismissOnTimeout:!0,dismissTimeout:4,dismissOnClick:!0,onBeforeCreate:null,onAfterCreate:null,onBeforeDismiss:null,onDismiss:null,desktop:!1};this.configure=function(options){return _defaults=angular.extend(_defaults,options)},this.$get=function(){return{defaults:_defaults}}});